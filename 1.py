'''OF Bot'''

"""
Version - 4.–º–∏–ª–ª–∏–æ–Ω
With this bot you can fast and easly order food.
Based on SQLite base.
"""

import telebot
import constains
import sqlite3

state = -1
bot = telebot.TeleBot(constains.token)
message_id = 0
karzina = ''
print("------------------------------------------------------------------")
print(bot.get_me())
print("------------------------------------------------------------------")


def log(log_answer, message):
    from datetime import datetime
    print("–ú–æ–π –≤–æ–ø—Ä–æ—Å - " + log_answer)
    print(datetime.now())
    print("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {0} {1}. (id = {2}) \n–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - {3}".format(message.from_user.first_name,
                                                                                   message.from_user.last_name,
                                                                                   message.from_user.id,
                                                                                   message.text))
    print("------------------------------------------------------------------")


@bot.message_handler(commands=['start', 'help', 'stop'])
def handle_start_help(message):
    global state
    log_answer = """–ß—Ç–æ –±—ã –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∑–∞–∫–∞–∑ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –≤—ã –¥–æ–ª–∂–Ω—ã –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–æ–±—Ä–µ—Å—Ç–∏.
–ï—Å–ª–∏ –ë–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç \"???\" - —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ —Ç–∞–∫–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
–í–≤–µ–¥–∏—Ç–µ –≤–∏–¥ —Ç–æ–≤–∞—Ä–∞!"""
    log(log_answer, message)




    '''—Å–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é'''
    user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
    user_markup.row('/help', '/stop')
    user_markup.row('–ø—Ä–æ–¥—É–∫—Ç—ã', '–∫–æ—Ä–∑–∏–Ω–∞')
    '''–∫–æ–Ω–µ—Ü —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é'''




    if message.text == '/start' or message.text == '/help':
        bot.send_message(message.chat.id, """–ß—Ç–æ –±—ã –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∑–∞–∫–∞–∑ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –≤—ã –¥–æ–ª–∂–Ω—ã –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–æ–±—Ä–µ—Å—Ç–∏.
–ï—Å–ª–∏ –ë–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç \"???\" - —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ —Ç–∞–∫–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.""")
    bot.send_message(message.chat.id, "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ?", reply_markup=user_markup)
    state = -1


@bot.message_handler(content_types=['text'])
def handle_text(message):
    global state
    global message_id
    global karzina
    if state == -1:
        if message.text == '–ø—Ä–æ–¥—É–∫—Ç—ã':
            user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
            user_markup.row('/help', '/stop')
            user_markup.row('üçï–ü–∏—Ü—Ü–∞üçï', 'ü•õ–í–æ–¥–∞ü•õ')
            user_markup.row('–°—É—à–∏', '–ö–æ–ª–∞')
            user_markup.row('üëù–ö–æ—Ä–∑–∏–Ω–∞üëù')
            bot.send_message(message.chat.id, "#REFRESH", reply_markup=user_markup)
            state = 0
        elif message.text == '–∫–∞—Ä–∑–∏–Ω–∞':
            user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
            bot.send_message(message.chat.id, karzina, reply_markup=user_markup)
            user_markup.row('/help', '/stop')
            user_markup.row('–ø—Ä–æ–¥—É–∫—Ç—ã', '–∫–∞—Ä–∑–∏–Ω–∞')
            state = -1
    if state == 0:
        conn = sqlite3.connect('baza.sqlite')
        c = conn.cursor()

        if message.text == '–ü–∏—Ü—Ü–∞' or message.text == '–ø–∏—Ü—Ü–∞' or message.text == 'üçï–ü–∏—Ü—Ü–∞üçï':
            message_id = 1
        if message.text == '–°—É—à–∏' or message.text == '—Å—É—à–∏' or message.text == '—Å—É—à–∏':
            message_id = 2
        if message.text == '–í–æ–¥–∞' or message.text == '–≤–æ–¥–∞' or message.text == 'ü•õ–í–æ–¥–∞ü•õ':
            message_id = 3
        if message.text == 'üëù–ö–æ—Ä–∑–∏–Ω–∞üëù' or message.text == '–ö–æ—Ä–∑–∏–Ω–∞' or message.text == '–∫–æ—Ä–∑–∏–Ω–∞':
            message_id = 4

        if message_id == 1:
            c.execute('SELECT * FROM pizza')
            user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
            user_markup.row('/help', '/stop')
            row = c.fetchone()
            while row is not None:
                row_a = str(row[0])
                row = c.fetchone()
                if row is not None:
                    row_b = str(row[0])
                    user_markup.row(row_a, row_b)
                    row = c.fetchone()
                else:
                    user_markup.row(row_a)
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ—Ü –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏.",
                             reply_markup=user_markup)

        if message_id == 2:
            c.execute('SELECT * FROM sushi')
            user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
            user_markup.row('/help', '/stop')
            row = c.fetchone()
            while row is not None:
                row_a = str(row[0])
                row = c.fetchone()
                if row is not None:
                    row_b = str(row[0])
                    user_markup.row(row_a, row_b)
                else:
                    user_markup.row(row_a)
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∏–¥ —Å—É—à–∏, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏.",
                             reply_markup=user_markup)
        if message_id == 3:
            c.execute('SELECT * FROM wather')
            user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
            user_markup.row('/help', '/stop')
            row = c.fetchone()
            while row is not None:
                row_a = str(row[0])
                row = c.fetchone()
                if row is not None:
                    row_b = str(row[0])
                    user_markup.row(row_a, row_b)
                else:
                    user_markup.row(row_a)
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫—É –≤–æ–¥—ã, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏.",
                             reply_markup=user_markup)
        if message_id == 4:
            bot.send_message(message.chat.id, karzina)
            log("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞ –∫–æ—Ä–∑–∏–Ω–∞", message)
        elif message_id == 0:
            bot.send_message(message.chat.id, "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ?")
        else:
            log("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞!", message)
            state = 1
        c.close()
        conn.close()
        return 0

    if state == 1:
        conn = sqlite3.connect('baza.sqlite')
        c = conn.cursor()
        input_name = message.text
        log("–í–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫—É —Ç–æ–≤–∞—Ä–∞!", message)

        if message_id == 1:
            c.execute('SELECT * FROM pizza')
        if message_id == 2:
            c.execute('SELECT * FROM sushi')
        if message_id == 3:
            c.execute('SELECT * FROM wather')
        row = c.fetchone()
        user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
        user_markup.row('/help', '/stop')
        user_markup.row('–î–∞', '–ù–µ—Ç')

        while row is not None:
            if row[0] == input_name:
                bot.send_message(message.chat.id, "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ: " + row[0] + " | –°—Ç–æ–∏–º–æ—Å—Ç—å: " + str(row[1]) +
                                 " | –í–µ—Å: " + str(row[2]))
                karzina += "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ: " + row[0] + " | –°—Ç–æ–∏–º–æ—Å—Ç—å: " + str(row[1]) + " | –í–µ—Å: " + str(row[2]) + "\n"
                bot.send_message(message.chat.id, "–£—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–∏ –≤–∞—Å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä? ", reply_markup=user_markup)
                state = 2
            row = c.fetchone()
            if state == 2:
                c.close()
                conn.close()
                return 0
        bot.send_message(message.chat.id, "#EROR 404 || –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω!")

    if state == 2:
        user_message = message.text
        arc = 0
        if user_message == '–ù–µ—Ç' or user_message == '–Ω–µ—Ç':
            log("–£—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–∏ –≤–∞—Å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä? ", message)
            arc = 1
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∏–¥ —Ç–æ–≤–∞—Ä–∞!")
        if user_message == '–î–∞' or user_message == '–¥–∞':
            log("–£—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–∏ –≤–∞—Å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä? ", message)
            arc = 1
            bot.send_message(message.chat.id, "–£—Å–ø–µ—à–Ω–æ!")
        if arc == 0:
            log("–£—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–∏ –≤–∞—Å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä? ", message)
            bot.send_message(message.chat.id, "–£—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–∏ –≤–∞—Å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?")
        if arc == 1:
            user_markup = telebot.types.ReplyKeyboardMarkup(True, False)
            user_markup.row('/help', '/stop')
            user_markup.row('–ø—Ä–æ–¥—É–∫—Ç—ã', '–∫–∞—Ä–∑–∏–Ω–∞')
            bot.send_message(message.chat.id, "#REFRESH", reply_markup=user_markup)
            state = -1
        return 0


@bot.message_handler(content_types=['document', 'audio', 'photo', 'video', 'voice'])
def handle_docs_audio_photo_video_voice(message):
    log_answer = "–≠—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    log(log_answer, message)
    bot.send_message(message.chat.id, log_answer)


@bot.message_handler(content_types=['sticker'])
def handle_sticker(message):
    log_answer = ")))"
    log(log_answer, message)
    bot.send_message(message.chat.id, log_answer)


bot.polling(none_stop=True, interval=0)